---
- name: Destroy current vault (WARNING)
  shell: |
    systemctl stop vault || true
    systemctl disable vault || true
    rm -rf {{ install_path }} /usr/lib/systemd/system/vault || true
  when: destroy_first is defined and destroy_first == true

- name: Add vault user
  ansible.builtin.user:
    name: vault
    system: yes
    shell: /sbin/nologin
    group: vault
    state: present

- name: Create install directory tree
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: vault
    group: vault
    mode: 0700
  loop:
    - "{{ install_path }}/bin"
    - "{{ install_path }}/data"
    - "{{ install_path }}/conf/certs"
    - "{{ install_path }}/log"

- name: Setting fact schema default http and https if tls_name is defined
  ansible.builtin.set_fact:
    schema: "http{% if tls_name is defined %}s{% endif %}"

- name: Create vault config
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: "{{ install_path }}/conf/vault.hcl"
    owner: vault
    group: vault
    mode: 0600

- name: Create environment file
  ansible.builtin.template:
    src: vault.env.j2
    dest: "{{ install_path }}/conf/vault.env"
    owner: vault
    group: vault
    mode: 0600

- name: Copy vault binary
  copy:
    src: vault
    dest: "{{ install_path }}/bin/"
    owner: vault
    group: vault
    mode: 0700

- name: Copy certificates for tls communication
  copy:
    src: "{{ item }}"
    dest: "{{ install_path }}/conf/certs/"
    owner: vault
    group: vault
    mode: 0600
  loop:
    - "{{ tls_name }}.crt"
    - "{{ tls_name }}.key"
    - rootCA.crt
  when: tls_name is defined

- name: Create vault service
  ansible.builtin.template:
    src: vault.service.j2
    dest: "/usr/lib/systemd/system/vault.service"
    owner: vault
    group: vault
    mode: 0600

- name: Enable service vault
  ansible.builtin.systemd:
    name: vault
    enabled: yes
    masked: no
    state: restarted
    daemon_reload: yes
    force: yes

- name: Pause 30 seconds waiting vault cluster start service and connect nodes
  ansible.builtin.pause:
    seconds: 30

- name: Init cluster
  environment:
    VAULT_ADDR: "{{ schema }}://{{ ansible_host }}:{{ api_port }}"
    VAULT_SKIP_VERIFY: "true"
    VAULT_FORMAT: "yaml"
  shell: |
    mkdir -p {{ inventory_dir }}/secrets
    {{ inventory_dir }}/roles/vault/files/vault operator init > {{ inventory_dir }}/secrets/{{ group }}.init.yml
  run_once: true
  delegate_to: localhost
  become: false

- name: Pause 30 seconds waiting vault cluster take initialization
  ansible.builtin.pause:
    seconds: 30

- name: Load keys for unseal cluster (without autounseal definition)
  ansible.builtin.include_vars: "{{ inventory_dir }}/secrets/{{ group }}.init.yml"
  when: autounseal is not defined
  run_once: true

- name: Unseal cluster (without autounseal definition)
  environment:
    VAULT_ADDR: "{{ schema }}://{{ ansible_host }}:{{ api_port }}"
    VAULT_SKIP_VERIFY: "true"
    VAULT_FORMAT: "yaml"
  shell: |
    {{ inventory_dir }}/roles/vault/files/vault operator unseal {{ unseal_keys_hex[0] }} && sleep 1
    {{ inventory_dir }}/roles/vault/files/vault operator unseal {{ unseal_keys_hex[1] }} && sleep 1
    {{ inventory_dir }}/roles/vault/files/vault operator unseal {{ unseal_keys_hex[2] }} && sleep 10
  when: autounseal is not defined
  throttle: 1
  delegate_to: localhost
  become: false